name: Build and Publish Docker Image

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'LICENSE'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Dart version
        id: dart-version
        run: |
          DART_VERSION=$(cat .dart-version | tr -d '[:space:]')
          echo "version=$DART_VERSION" >> $GITHUB_OUTPUT
          echo "Using Dart version: $DART_VERSION"

      - name: Get actual Dart SDK version number
        id: dart-sdk-version
        run: |
          # Pull the dart image to get the actual version
          docker pull dart:${{ steps.dart-version.outputs.version }}
          SDK_VERSION=$(docker run --rm dart:${{ steps.dart-version.outputs.version }} dart --version 2>&1 | grep -oP 'Dart SDK version: \K[0-9]+\.[0-9]+\.[0-9]+')
          echo "sdk_version=$SDK_VERSION" >> $GITHUB_OUTPUT
          echo "Dart SDK version: $SDK_VERSION"

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=dart-${{ steps.dart-sdk-version.outputs.sdk_version }},enable={{is_default_branch}}
            type=raw,value=${{ steps.dart-sdk-version.outputs.sdk_version }},enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            DART_VERSION=${{ steps.dart-version.outputs.version }}
